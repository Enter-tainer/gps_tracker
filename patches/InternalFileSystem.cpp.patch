--- "C:\\Users\\mgt\\.platformio\\packages\\framework-arduinoadafruitnrf52\\libraries\\InternalFileSytem\\src\\InternalFileSystem.cpp"	2024-05-20 22:50:15.080970700 +0800
+++ "c:\\Users\\mgt\\Desktop\\proj\\gps_tracker\\patches\\src\\InternalFileSystem.cpp"	2025-05-06 23:28:31.864032000 +0800
@@ -1,4 +1,4 @@
-/* 
+/*
  * The MIT License (MIT)
  *
  * Copyright (c) 2019 hathach for Adafruit Industries
@@ -26,29 +26,28 @@
 #include "flash/flash_nrf5x.h"
 
 #ifdef NRF52840_XXAA
-#define LFS_FLASH_ADDR        0xED000
+#define LFS_FLASH_ADDR 0x50000
 #else
-#define LFS_FLASH_ADDR        0x6D000
+#define LFS_FLASH_ADDR 0x6D000
 #endif
 
-#define LFS_FLASH_TOTAL_SIZE  (7*FLASH_NRF52_PAGE_SIZE)
-#define LFS_BLOCK_SIZE        128
+#define LFS_FLASH_TOTAL_SIZE (164 * FLASH_NRF52_PAGE_SIZE)
+#define LFS_BLOCK_SIZE 128
 
 //--------------------------------------------------------------------+
 // LFS Disk IO
 //--------------------------------------------------------------------+
 
-static inline uint32_t lba2addr(uint32_t block)
-{
-  return ((uint32_t) LFS_FLASH_ADDR) + block * LFS_BLOCK_SIZE;
+static inline uint32_t lba2addr(uint32_t block) {
+  return ((uint32_t)LFS_FLASH_ADDR) + block * LFS_BLOCK_SIZE;
 }
 
-static int _internal_flash_read (const struct lfs_config *c, lfs_block_t block, lfs_off_t off, void *buffer, lfs_size_t size)
-{
-  (void) c;
+static int _internal_flash_read(const struct lfs_config *c, lfs_block_t block,
+                                lfs_off_t off, void *buffer, lfs_size_t size) {
+  (void)c;
 
   uint32_t addr = lba2addr(block) + off;
-  VERIFY( flash_nrf5x_read(buffer, addr, size) > 0, -1);
+  VERIFY(flash_nrf5x_read(buffer, addr, size) > 0, -1);
 
   return 0;
 }
@@ -56,12 +55,13 @@
 // Program a region in a block. The block must have previously
 // been erased. Negative error codes are propogated to the user.
 // May return LFS_ERR_CORRUPT if the block should be considered bad.
-static int _internal_flash_prog (const struct lfs_config *c, lfs_block_t block, lfs_off_t off, const void *buffer, lfs_size_t size)
-{
-  (void) c;
+static int _internal_flash_prog(const struct lfs_config *c, lfs_block_t block,
+                                lfs_off_t off, const void *buffer,
+                                lfs_size_t size) {
+  (void)c;
 
   uint32_t addr = lba2addr(block) + off;
-  VERIFY( flash_nrf5x_write(addr, buffer, size), -1)
+  VERIFY(flash_nrf5x_write(addr, buffer, size), -1)
 
   return 0;
 }
@@ -70,15 +70,14 @@
 // The state of an erased block is undefined. Negative error codes
 // are propogated to the user.
 // May return LFS_ERR_CORRUPT if the block should be considered bad.
-static int _internal_flash_erase (const struct lfs_config *c, lfs_block_t block)
-{
-  (void) c;
+static int _internal_flash_erase(const struct lfs_config *c,
+                                 lfs_block_t block) {
+  (void)c;
 
   uint32_t addr = lba2addr(block);
 
   // implement as write 0xff to whole block address
-  for(int i=0; i <LFS_BLOCK_SIZE; i++)
-  {
+  for (int i = 0; i < LFS_BLOCK_SIZE; i++) {
     flash_nrf5x_write8(addr + i, 0xFF);
   }
 
@@ -89,34 +88,30 @@
 
 // Sync the state of the underlying block device. Negative error codes
 // are propogated to the user.
-static int _internal_flash_sync (const struct lfs_config *c)
-{
-  (void) c;
+static int _internal_flash_sync(const struct lfs_config *c) {
+  (void)c;
   flash_nrf5x_flush();
   return 0;
 }
 
+static struct lfs_config _InternalFSConfig = {
+    .context = NULL,
 
-static struct lfs_config _InternalFSConfig =
-{
-  .context = NULL,
-
-  .read = _internal_flash_read,
-  .prog = _internal_flash_prog,
-  .erase = _internal_flash_erase,
-  .sync = _internal_flash_sync,
-
-  .read_size = LFS_BLOCK_SIZE,
-  .prog_size = LFS_BLOCK_SIZE,
-  .block_size = LFS_BLOCK_SIZE,
-  .block_count = LFS_FLASH_TOTAL_SIZE / LFS_BLOCK_SIZE,
-  .lookahead = 128,
-
-  .read_buffer = NULL,
-  .prog_buffer = NULL,
-  .lookahead_buffer = NULL,
-  .file_buffer = NULL
-};
+    .read = _internal_flash_read,
+    .prog = _internal_flash_prog,
+    .erase = _internal_flash_erase,
+    .sync = _internal_flash_sync,
+
+    .read_size = LFS_BLOCK_SIZE,
+    .prog_size = LFS_BLOCK_SIZE,
+    .block_size = LFS_BLOCK_SIZE,
+    .block_count = LFS_FLASH_TOTAL_SIZE / LFS_BLOCK_SIZE,
+    .lookahead = 128,
+
+    .read_buffer = NULL,
+    .prog_buffer = NULL,
+    .lookahead_buffer = NULL,
+    .file_buffer = NULL};
 
 InternalFileSystem InternalFS;
 
@@ -125,27 +120,24 @@
 //--------------------------------------------------------------------+
 
 InternalFileSystem::InternalFileSystem(void)
-  : Adafruit_LittleFS(&_InternalFSConfig)
-{
+    : Adafruit_LittleFS(&_InternalFSConfig) {}
 
-}
-
-bool InternalFileSystem::begin(void)
-{
+bool InternalFileSystem::begin(void) {
   // failed to mount, erase all sector then format and mount again
-  if ( !Adafruit_LittleFS::begin() )
-  {
+  if (!Adafruit_LittleFS::begin()) {
     // Erase all sectors of internal flash region for Filesystem.
-    for ( uint32_t addr = LFS_FLASH_ADDR; addr < LFS_FLASH_ADDR + LFS_FLASH_TOTAL_SIZE; addr += FLASH_NRF52_PAGE_SIZE )
-    {
-      VERIFY( flash_nrf5x_erase(addr) );
+    for (uint32_t addr = LFS_FLASH_ADDR;
+         addr < LFS_FLASH_ADDR + LFS_FLASH_TOTAL_SIZE;
+         addr += FLASH_NRF52_PAGE_SIZE) {
+      VERIFY(flash_nrf5x_erase(addr));
     }
 
     // lfs format
     this->format();
 
     // mount again if still failed, give up
-    if ( !Adafruit_LittleFS::begin() ) return false;
+    if (!Adafruit_LittleFS::begin())
+      return false;
   }
 
   return true;
